@apl{lpdoc} is an @em{automatic program documentation generator} for
(C)LP systems.

@apl{lpdoc} generates a reference manual automatically from one or
more source files for a logic program (including ISO-@apl{Prolog}
@cite{iso-prolog}, @apl{Ciao} @cite{ciao-manual-tr}, and other
@apl{CLP} @cite{survey94} systems).  It is particularly useful for
documenting library modules, for which it automatically generates a
description of the module interface. However, @apl{lpdoc} can also be
used quite successfully to document full applications and to generate
nicely formatted plain ASCII ``readme'' files.  A fundamental
advantage of using @apl{lpdoc} to document programs is that it is much
easier to maintain a true correspondence between the program and its
documentation, and to identify precisely to what version of the
program a given printed manual corresponds.

@section{Overview of this document}

This first part of the document provides usage information on how to
generate and access manuals (@ref{Generating and accessing manuals}),
as well as detailed instructions required to write proper
documentation manuals (@ref{Writing documentation}). Examples are
given using the files in the @tt{examples} directory provided with the
@apl{lpdoc} distribution.

Other parts of this document provide:

@begin{itemize}

@item Documentation on the syntax and meaning of the @em{assertions}
  that @apl{lpdoc} uses (those defined in the @apl{Ciao}
  @lib{assertions} library
  @cite{assert-lang-tr,assrt-framework-jicslp98ws,assrt-debug-manual}). These
  include @em{comment} assertions (containing basically documentation
  text), formal assertions (containing properties), and combined
  assertions.

@item Documentation on a basic set of @concept{properties},
  @concept{types}, etc. which are predefined in the @apl{Ciao}
  @lib{basic_props}, @lib{regtypes}, @lib{native_props}, and
  @lib{meta_props} libraries. These properties, and any others defined
  by the user or in other @apl{Ciao} libraries, can be used in program
  assertions.

@item Documentation on the @concept{formatting commands} that can be
  embedded in @em{comments}.

@end{itemize}

A separate @concept{internals manual} provides information on how the
different internal parts of @apl{lpdoc} are connected, which can be
useful if new capabilities need to be added to the system or its
libraries are used for other purposes.

All of the above have been generated automatically from the assertions
in the corresponding sources and can also be seen as examples of the
use of @apl{lpdoc}.

Some additional information on @apl{lpdoc} can be found in
@cite{lpdoc-cl2000}.

